Raptor runs makefiles in sequential: bitmap -> resource -> default

Although there are dependencies for makefile building, there are no dependencies for 
makefiles parsing, so it would be faster to parse the makefiles in parallel. To do that, 
Raptor will use multiprocess to run several make simultaneously, and use markers to 
indicate parsing for previous stage has finished. In each makefile shell will be used 
at the end of the makefile to check those markers:

$(shell while [ ! -f $(MARKER) ] ; do sleep 1; done )

So the dependencies still stand.

N.B.
The pre-work to reorganize the way Raptor run makefiles in front-end is done.
Using multiprocess to run makefiles and adding the shell commands to makefiles 
are still to be done.